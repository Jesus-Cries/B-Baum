{"version":3,"sources":["components/Node/Node.tsx","components/Bbaum/Bbaum.tsx","App.tsx","GlobalStyle.ts","index.tsx"],"names":["useStyles","makeStyles","root","width","marginTop","marginBottom","justifyContent","alignItems","item","display","marginLeft","marginRight","padding","border","Node","values","classes","Grid","className","container","map","value","Bbaum","useState","nodeSize","bbaum","setBbaum","useEffect","tempBbaum","i","length","push","normalizeArray","Box","App","GlobalStyle","createGlobalStyle","theme","createTheme","palette","primary","main","secondary","background","default","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"sLAMMA,EAAYC,YAAW,CACzBC,KAAM,CACFC,MAAO,IACPC,UAAW,GACXC,aAAc,IACdC,eAAgB,SAChBC,WAAY,UAEhBC,KAAM,CACFC,QAAS,OACTH,eAAgB,SAChBH,MAAO,GACPO,WAAY,EACZC,YAAa,EACbC,QAAS,GACTC,OAAQ,qBAsBDC,EAde,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvBC,EAAUhB,IAEhB,OACI,cAACiB,EAAA,EAAD,CAAMC,UAAWF,EAAQd,KAAMiB,WAAS,EAAxC,SACKJ,EAAOK,KAAI,SAACC,GAAD,OACR,cAACJ,EAAA,EAAD,CAAMC,UAAWF,EAAQR,KAAMA,MAAI,EAAnC,SACKa,UC5BfrB,EAAYC,YAAW,CACzBC,KAAM,GACNiB,UAAW,CACPb,eAAgB,kBA2DTgB,EArDgB,WAC3B,IAAMN,EAAUhB,IAEhB,EAAgCuB,mBAAiB,GAAjD,mBAAOC,EAAP,KACA,GADA,KAC0BD,mBAAqB,CAC3C,CAAC,MACD,CAAC,IAAK,KACN,CAAC,KAAM,MACP,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,KAAM,MACP,CAAC,KAAM,MACP,CAAC,IAAK,IAAK,KACX,CAAC,KAAM,KAAM,KAAM,SATvB,mBAAOE,EAAP,KAAcC,EAAd,KA0BA,OAJAC,qBAAU,YAVa,WAEnB,IADA,IAAIC,EAAwBH,EACnBI,EAAI,EAAGA,EAAID,EAAUE,OAAQD,IAClC,KAAOD,EAAUC,GAAGC,OAASN,GACzBI,EAAUC,GAAGE,KAAK,uBAG1BL,EAASE,GAITI,KACD,IAGC,eAACC,EAAA,EAAD,WACI,cAAChB,EAAA,EAAD,CAAMC,UAAWF,EAAQG,UAAWA,WAAS,EAA7C,SACI,cAAC,EAAD,CAAMJ,OAAQU,EAAM,OAGxB,eAACR,EAAA,EAAD,CAAMC,UAAWF,EAAQG,UAAWA,WAAS,EAA7C,UACI,cAAC,EAAD,CAAMJ,OAAQU,EAAM,KACpB,cAAC,EAAD,CAAMV,OAAQU,EAAM,QAGxB,eAACR,EAAA,EAAD,CAAMC,UAAWF,EAAQG,UAAWA,WAAS,EAA7C,UACI,cAAC,EAAD,CAAMJ,OAAQU,EAAM,KACpB,cAAC,EAAD,CAAMV,OAAQU,EAAM,KACpB,cAAC,EAAD,CAAMV,OAAQU,EAAM,KACpB,cAAC,EAAD,CAAMV,OAAQU,EAAM,KACpB,cAAC,EAAD,CAAMV,OAAQU,EAAM,KACpB,cAAC,EAAD,CAAMV,OAAQU,EAAM,YC1DrBS,EAJO,WAClB,OAAO,cAAC,EAAD,K,gBCkCIC,EAnCKC,YAAH,2pC,gBCMXC,EAAQC,YAAY,CACtBC,QAAS,CACLC,QAAS,CACLC,KAAM,WAEVC,UAAW,CACPD,KAAM,WAEVE,WAAY,CACRC,QAAS,cAKrBC,IAASC,OACL,eAAC,IAAMC,WAAP,WACI,cAAC,EAAD,IACA,cAACC,EAAA,EAAD,CAAeX,MAAOA,EAAtB,SACI,cAAC,EAAD,SAGRY,SAASC,eAAe,W","file":"static/js/main.2c0a9f17.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 250,\r\n        marginTop: 30,\r\n        marginBottom: 120,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    item: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        width: 40,\r\n        marginLeft: 2,\r\n        marginRight: 2,\r\n        padding: 10,\r\n        border: \"1px solid black\",\r\n    },\r\n});\r\n\r\ninterface Props {\r\n    values: string[];\r\n}\r\n\r\nconst Node: React.FC<Props> = ({ values }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid className={classes.root} container>\r\n            {values.map((value) => (\r\n                <Grid className={classes.item} item>\r\n                    {value}\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Node;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport Node from \"../../components/Node/Node\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {},\r\n    container: {\r\n        justifyContent: \"space-evenly\",\r\n    },\r\n});\r\n\r\ninterface Props {}\r\n\r\nconst Bbaum: React.FC<Props> = () => {\r\n    const classes = useStyles();\r\n\r\n    const [nodeSize, setNodeSize] = useState<number>(5);\r\n    const [bbaum, setBbaum] = useState<string[][]>([\r\n        [\"10\"],\r\n        [\"3\", \"7\"],\r\n        [\"13\", \"19\"],\r\n        [\"1\", \"2\"],\r\n        [\"8\", \"9\"],\r\n        [\"11\", \"12\"],\r\n        [\"20\", \"21\"],\r\n        [\"4\", \"5\", \"6\"],\r\n        [\"14\", \"15\", \"16\", \"18\"],\r\n    ]);\r\n\r\n    const normalizeArray = () => {\r\n        let tempBbaum: string[][] = bbaum;\r\n        for (let i = 0; i < tempBbaum.length; i++) {\r\n            while (tempBbaum[i].length < nodeSize) {\r\n                tempBbaum[i].push(\"‎‎ ‎\");\r\n            }\r\n        }\r\n        setBbaum(tempBbaum);\r\n    };\r\n\r\n    useEffect(() => {\r\n        normalizeArray();\r\n    }, []);\r\n\r\n    return (\r\n        <Box>\r\n            <Grid className={classes.container} container>\r\n                <Node values={bbaum[0]} />\r\n            </Grid>\r\n\r\n            <Grid className={classes.container} container>\r\n                <Node values={bbaum[1]} />\r\n                <Node values={bbaum[2]} />\r\n            </Grid>\r\n\r\n            <Grid className={classes.container} container>\r\n                <Node values={bbaum[3]} />\r\n                <Node values={bbaum[4]} />\r\n                <Node values={bbaum[5]} />\r\n                <Node values={bbaum[6]} />\r\n                <Node values={bbaum[7]} />\r\n                <Node values={bbaum[8]} />\r\n            </Grid>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Bbaum;\r\n","import Bbaum from \"./components/Bbaum/Bbaum\";\r\n\r\nconst App: React.FC = () => {\r\n    return <Bbaum />;\r\n};\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n   /* roboto-300 - latin */\r\n//   @font-face {\r\n//     font-family: 'Roboto';\r\n//     font-style: normal;\r\n//     font-weight: 300;\r\n//     src: url('../fonts/roboto-v27-latin-300.eot'); /* IE9 Compat Modes */\r\n//     src: local(''),\r\n//          url('../fonts/roboto-v27-latin-300.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */\r\n//          url('../fonts/roboto-v27-latin-300.woff2') format('woff2'), /* Super Modern Browsers */\r\n//          url('../fonts/roboto-v27-latin-300.woff') format('woff'), /* Modern Browsers */\r\n//          url('../fonts/roboto-v27-latin-300.ttf') format('truetype'), /* Safari, Android, iOS */\r\n//          url('../fonts/roboto-v27-latin-300.svg#Roboto') format('svg'); /* Legacy iOS */\r\n//   }\r\n\r\n   *{\r\n        margin: 0;\r\n        padding: 0;\r\n        -moz-box-sizing: border-box;\r\n        -webkit-box-sizing: border-box;\r\n        box-sizing: border-box;\r\n        font-family: \"Roboto\", sans-serif;\r\n   }\r\n\r\n   /* This is here to make my eyes hurt less at night */\r\n   body{\r\n      /* background-color: #292929; */\r\n      background-color: #fff;\r\n   }\r\n\r\n   /* html {\r\n        font-size: 62.5%;\r\n   } */\r\n   `;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n// import reportWebVitals from \"./reportWebVitals\";\r\nimport GlobalStyle from \"./GlobalStyle\";\r\n\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: \"#c62828\",\r\n        },\r\n        secondary: {\r\n            main: \"#ff9800\",\r\n        },\r\n        background: {\r\n            default: \"#00ff00\",\r\n        },\r\n    },\r\n});\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <GlobalStyle />\r\n        <ThemeProvider theme={theme}>\r\n            <App />\r\n        </ThemeProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}